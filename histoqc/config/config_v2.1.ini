[pipeline]
steps= BasicModule.getBasicStats
    LightDarkModule.saveEqualisedImage
#    ClassificationModule.byExampleWithFeatures:pen_markings
#    ClassificationModule.byExampleWithFeatures:coverslip_edge
    LightDarkModule.minimumPixelIntensityNeighborhoodFiltering
    LightDarkModule.getIntensityThresholdPercent:darktissue
    BubbleRegionByRegion.detectSmoothness
    MorphologyModule.removeFatlikeTissue
    MorphologyModule.fillSmallHoles
    MorphologyModule.removeSmallObjects
    LocalTextureEstimationModule.estimateGreyComatrixFeatures:background
    BrightContrastModule.getContrast:background
    BrightContrastModule.getBrightnessGray:background
    BrightContrastModule.getBrightnessByChannelinColorSpace:RGB_background
    BlurDetectionModule.identifyBlurryRegions
    BasicModule.finalProcessingSpur
    BasicModule.finalProcessingArea
    HistogramModule.compareToTemplates
    HistogramModule.getHistogram
    LocalTextureEstimationModule.estimateGreyComatrixFeatures:final
    BrightContrastModule.getContrast
    BrightContrastModule.getBrightnessGray
    BrightContrastModule.getBrightnessByChannelinColorSpace:RGB
    BrightContrastModule.getBrightnessByChannelinColorSpace:YUV
    DeconvolutionModule.separateStains
    SaveModule.saveFinalMask
    SaveModule.saveMacro
    SaveModule.saveThumbnails
    BasicModule.finalComputations


[BaseImage.BaseImage]
image_work_size = 1.25x
in_memory_compression = True

#not yet implemented
confirm_base_mag: False

#three options: relative2mask, absolute, relative2image
mask_statistics = relative2mask

[BasicModule.getBasicStats]
image_work_size = 1.25x

#[ClassificationModule.byExample]
[ClassificationModule.byExampleWithFeatures:pen_markings]
name: pen_markings
threshold: .5
examples: ./pen/1k_version/pen_green.png:./pen/1k_version/pen_green_mask.png
          ./pen/1k_version/pen_red.png:./pen/1k_version/pen_red_mask.png
          ./pen/1k_version/pen_black.png:./pen/1k_version/pen_black_mask.png

nsamples_per_example: 10000
area_threshold: 100
features:  frangi
           laplace
           rgb
           #lbp
           #gabor
           #median
           #gaussian

laplace_ksize: 3

frangi_scale_range: (1,10)
frangi_scale_step: 2
frangi_beta1: .5
frangi_beta2: 15
frangi_black_ridges: True

gabor_theta: 4
gabor_sigma: (1,3)
gabor_frequency: (0.05, 0.25)

lbp_radius: 3
lbp_points: 24
lbp_method: default

median_disk_size: 3

#gaussian_sigma: 1
#gaussian_multichan: False



[ClassificationModule.byExampleWithFeatures:coverslip_edge]
name: coverslip_edge
threshold: .5

examples: ./models/coverslip_edge_he/coverslip_edge.png:./models/coverslip_edge_he/coverslip_edge_mask.png

nsamples_per_example: 10000

area_threshold: 15
features:  frangi
           laplace
           rgb

dilate_kernel_size: 5

[LightDarkModule.getIntensityThresholdPercent:bubble]
name: bubble
upper_threshold: .94
lower_threshold: .82
upper_variance: 11
invert: true


[LightDarkModule.getIntensityThresholdPercent:tissue]
name: bright
upper_threshold: .9
lower_std: 10

[LightDarkModule.getIntensityThresholdPercent:darktissue]
name: dark
upper_threshold: .15
invert: true


[LightDarkModule.getTissuePercent]
threshold: .8

[LightDarkModule.getDarkTissuePercent]
threshold: .15

[MorphologyModule.removeSmallObjects]
min_size: 64

[MorphologyModule.removeFatlikeTissue]
kernel_size: 10
max_keep_size: 1000
fat_cell_size: 64

[MorphologyModule.fillSmallHoles]
min_size: 1000

[HistogramModule.compareToTemplates]
limit_to_mask: True
bins: 20
templates= ./templates/template1.png
           ./templates/template2.png
           ./templates/template3.png
           ./templates/template4.png

[HistogramModule.getHistogram]
limit_to_mask: True
bins: 20

[BrightContrastModule.getContrast]
limit_to_mask: True


[BrightContrastModule.getBrightnessGray]
limit_to_mask: True

[BrightContrastModule.getBrightnessByChannelinColorSpace:RGB]
limit_to_mask: True



[BrightContrastModule.getContrast:background]
prefix: background
limit_to_mask: True
invert: True
mask_name: img_mask_use

[BrightContrastModule.getBrightnessGray:background]
prefix: background
limit_to_mask: True
invert: True
mask_name: img_mask_use

[BrightContrastModule.getBrightnessByChannelinColorSpace:RGB_background]
prefix: background
limit_to_mask: True
invert: True
mask_name: img_mask_use

[BrightContrastModule.getBrightnessByChannelinColorSpace:YUV]
limit_to_mask: True
#pick a color space in the list from 'RGB', 'HSV', 'RGB CIE', 'XYZ', 'YUV', 'YIQ', 'YPbPr', 'YCbCr'  : http://scikit-image.org/docs/dev/api/skimage.color.html#skimage.color.convert_colorspace
to_color_space: YUV

[SaveModule.saveFinalMask]
overlay: True

[SaveModule.saveMacro]
dim: 500

[SaveModule.saveThumbnails]
image_work_size: 1.25x
small_dim: 500

[BlurDetectionModule.identifyBlurryRegions]
image_work_size = 2.5x
blur_radius: 100
blur_threshold: .15


[BasicModule.finalComputations]

[BasicModule.finalProcessingSpur]
disk_radius: 5

[BasicModule.finalProcessingArea]
#area_threshold: 90000
area_threshold:  10000

[DeconvolutionModule.separateStains]
;hed_from_rgb: Hematoxylin + Eosin + DAB
;hdx_from_rgb: Hematoxylin + DAB
;fgx_from_rgb: Feulgen + Light Green
;bex_from_rgb: Giemsa stain : Methyl Blue + Eosin
;rbd_from_rgb: FastRed + FastBlue + DAB
;gdx_from_rgb: Methyl Green + DAB
;hax_from_rgb: Hematoxylin + AEC
;bro_from_rgb: Blue matrix Anilline Blue + Red matrix Azocarmine + Orange matrix Orange-G
;bpx_from_rgb: Methyl Blue + Ponceau Fuchsin
;ahx_from_rgb: Alcian Blue + Hematoxylin
;hpx_from_rgb: Hematoxylin + PAS
stain: hed_from_rgb
use_mask: True


[BubbleRegionByRegion.detectSmoothness]
threshold: .01
kernel_size: 10
min_object_size: 500



[LocalTextureEstimationModule.estimateGreyComatrixFeatures:background]
prefix: background
patch_size: 32
npatches: 1000
nlevels: 8
feats: contrast:dissimilarity:homogeneity:ASM:energy:correlation
invert: True
mask_name: img_mask_use

[LocalTextureEstimationModule.estimateGreyComatrixFeatures:final]
prefix: final
patch_size: 32
nlevels: 8
npatches: 1000
feats: contrast:dissimilarity:homogeneity:ASM:energy:correlation
invert: False
mask_name: img_mask_use
[LightDarkModule.minimumPixelIntensityNeighborhoodFiltering]
disk_size: 5
upper_threshold: 210
invert: True
